
# 11번, 28번 시간초과 해결하지 못해서 참고한 유상준 님의 코드 
# https://school.programmers.co.kr/questions/35227

from collections import deque

def solution(queue1, queue2):
    target_sum = (sum(queue1) + sum(queue2)) / 2

    left_sum = sum(queue1)
    queue1 = deque(queue1)
    queue2 = deque(queue2)

    answer = 0
    while queue1 and queue2:
        if left_sum < target_sum:
            tmp = queue2.popleft()
            left_sum += tmp
            queue1.append(tmp)
            answer += 1
        elif left_sum > target_sum:
            left_sum -= queue1.popleft()
            answer += 1
        else:
            return answer

    else:
        return -1
        
        
        
# 다른 거 참고하면서 짠 코드
def solution(queue1, queue2):
    # if len(queue1)>300000 or len(queue2)>300000:
    #     answer=-1
    #     return answer

    answer = 0
    sum1 = sum(queue1)
    sum2 = sum(queue2)
    sum_val = sum1 + sum2
    # print(sum1, sum2)

    start1 = -1
    start2 = -1
    end1 = len(queue1) - 1
    end2 = len(queue2) - 1
    
    while True:
        if sum_val % 2 != 0:
            answer = -1
            break
        elif sum1 > sum2:
            answer += 1

            start1 += 1
            val = queue1[start1]
            queue2.append(val)
            end2 += 1
            sum1 -= val
            sum2 += val
            # print(f'{val}을 sum2에 더함. sum1은 {sum1}, sum2는 {sum2}')
        elif sum1 < sum2:
            answer += 1
            start2 += 1
            val = queue2[start2]
            queue1.append(val)
            end1 += 1
            sum1 += val
            sum2 -= val
            # print(f'{val}을 sum1에 더함. sum1은 {sum1}, sum2는 {sum2}')
        if sum1 == sum2:
            break
        if start1 == end1 or start2 == end2:  # 두 큐 중 하나라도 길이가 0이 되면
            answer = -1
            break
    return answer
